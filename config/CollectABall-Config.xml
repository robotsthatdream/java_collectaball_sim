<?xml version="1.0" encoding="UTF-8"?>

<!-- Configuración del simulador para la creación de un robot que alcance un objeto rojo -->
<simulator>
    <scenario>
        <class>es.udc.gii.collectaball.scenario.CollectBallWithDoorScenario</class>
        <toroidal>false</toroidal>
        <log>
            <path>_log</path>
            <name>_scenario</name>
            <cycles>3</cycles>
        </log>
        <scenarioToPaint>
            <ball>
                <x>280</x>
                <y>-40</y>
                <changePosition>true</changePosition>
            </ball>
            <box>
                <x>-250</x>
                <y>-250</y>
                <changePosition>true</changePosition>
            </box>
            <button>
                <x>-300</x>
                <y>250</y> 
                <changePosition>true</changePosition>
                <target>Door(0)</target> 
            </button>
            <wallWithDoor>
                <orientation>vertical</orientation>
                <coordinate>-50</coordinate>
                <thick>50</thick>
                <doorSize>600</doorSize>
                <doorCenter>0</doorCenter>
            </wallWithDoor>
        </scenarioToPaint>
    </scenario>


    <robot>
        <class>es.udc.gii.collectaball.robot.MDBBallCollectorRobot</class>
        <x>-150</x>
        <y>-200</y>
        <sensors>
            <sensor>
                <id>OpticalSensor(1)</id>
                <class>es.udc.gii.collectaball.robot.sensor.DistanceSinCosSensor</class>
                <config>
                    <sinAngleId>ballSinAngle</sinAngleId>
                    <cosAngleId>ballCosAngle</cosAngleId>
                    <distanceId>ballDistance</distanceId>
                    <color>#FF0000</color>
                    <position>0</position>
                    <range>1000</range>
                    <scope>360</scope>
                </config>
            </sensor>     
            <sensor>
                <id>OpticalSensor(2)</id>
                <class>es.udc.gii.collectaball.robot.sensor.DistanceSinCosSensor</class>
                <config>
                    <sinAngleId>boxSinAngle</sinAngleId>
                    <cosAngleId>boxCosAngle</cosAngleId>
                    <distanceId>boxDistance</distanceId>
                    <color>#0000FF</color>
                    <position>0</position>
                    <range>1000</range>
                    <scope>360</scope>
                </config>
            </sensor>    
            <sensor>
                <id>StateOpticalSensor(1)</id>
                <class>es.udc.gii.collectaball.robot.sensor.StateDistanceSinCosSensor</class>
                <config>
                    <sinAngleId>doorSinAngle</sinAngleId>
                    <cosAngleId>doorCosAngle</cosAngleId>
                    <distanceId>doorDistance</distanceId>
                    <stateId>doorState</stateId>
                    <color>#FFFF00</color>
                    <position>0</position>
                    <range>1000</range>
                    <scope>360</scope>
                    <state>0</state>
                </config>
            </sensor>   
            <sensor>
                <id>StateOpticalSensor(2)</id>
                <class>es.udc.gii.collectaball.robot.sensor.StateDistanceSinCosSensor</class>
                <config>
                    <sinAngleId>buttonSinAngle</sinAngleId>
                    <cosAngleId>buttonCosAngle</cosAngleId>
                    <distanceId>buttonDistance</distanceId>
                    <stateId>buttonState</stateId>
                    <color>#00CC00</color>
                    <position>0</position>
                    <range>1000</range>
                    <scope>360</scope>
                    <state>0</state>
                </config>
            </sensor>    
            <sensor>
                <!-- This sensor is added only for compatibility with all MDB version -->
                <id>satisfaction</id>
                <class>es.udc.gii.collectaball.robot.sensor.BallCollectorSatisfactionSensor</class>
                <config>
                    <id>satisfaction</id>
                </config>
            </sensor> 

            <sensor>
                <id>LoadSensor</id>
                <class>es.udc.gii.collectaball.robot.sensor.LoadSensor</class>
                <config>
                    <id>load</id>
                </config>
            </sensor> 
            <sensor>
                <id>RewardSensor</id>
                <class>es.udc.gii.collectaball.robot.sensor.RewardSensor</class>
                <config>
                    <id>accomplished</id>
                    <reward>1.0</reward>
                </config>
            </sensor> 

            <sensor>
                <!-- This sensor detects when the robot crash agains a wall --> 
                <id>CrashSensor</id>
                <class>es.udc.gii.collectaball.robot.sensor.CrashSensor</class>
                <config>
                    <id>crash</id>
                    <reward>1.0</reward>
                </config>
            </sensor>  
        </sensors>

        <actuators>
            <actuator>
                <id>Motor</id>
                <class>es.udc.gii.collectaball.robot.actuator.AngleMotorActuator</class>
                <config>
                    <angularMDBSocket>
                        <id>motor</id>
                    </angularMDBSocket>
                    <linearSpeed>25</linearSpeed>
                </config>
            </actuator>
        </actuators>

        <loop>
            <!-- This stablish the sensorization/actuation order for each loop iteration of the robot, to be synchronized with MDB -->
            <component>
                <id>OpticalSensor(1)</id>
            </component>
            <component>
                <id>OpticalSensor(2)</id>
            </component>
            <component>
                <id>StateOpticalSensor(1)</id>
            </component>
            <component>
                <id>StateOpticalSensor(2)</id>
            </component>
            <component>
                <id>LoadSensor</id>
            </component>
             <component>
                <id>Motor</id>
            </component>
             <component>
                <id>OpticalSensor(1)</id>
            </component>
            <component>
                <id>OpticalSensor(2)</id>
            </component>
            <component>
                <id>StateOpticalSensor(1)</id>
            </component>
            <component>
                <id>StateOpticalSensor(2)</id>
            </component>
           <component>
                <id>LoadSensor</id>
            </component>
             <component>
                <id>satisfaction</id>
            </component> 
            <component>
                <id>RewardSensor</id>
            </component>
        </loop>

    </robot>

</simulator>
